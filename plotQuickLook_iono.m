function [ error ] = plotQuickLook_iono( sliceDir, mstateFilename, dump, fp )
global GEOPACK1;
%plotQuickLook Generate slides of simulation results
%   The ECLAT WP520 provides one year continous GUMICS simulation based on
%   real solar wind measurements based on OMNIWeb data. Three slides are
%   generated by this tool in png format to the CAA:
%   
%   i.;  x=[-30,20], y=[-25,25], z=0
%   ii;  x=[-30,20], y=0, z=[-25,25]
%   iii; x=10, y=z=[-25,25]
%   
%   All units are in E radius and the density, pressure and plasma beta 
%   are ploted.
%
%   Developed by Gabor Facsko (gabor.facsko@fmi.fi)
%   Finnish Meteorological Institute, 2012-2013
%
% ------------------------------------------------------------------------
% error = plotQuickLook_iono( 'orbit246-12-20020201_013000_20020201_061100-constBx0', 'mstate20020201_040000.hc', 1);
% error = plotQuickLook_iono( 'orbit247-10-20020203_010500_20020203_055000-constBx0', 'mstate20020203_020000.hc', 1);
% error = plotQuickLook_iono( 'orbit250-10-20020210_041900_20020210_090400-constBx0', 'mstate20020210_051900.hc', 1);
% error = plotQuickLook_iono( 'orbit260-10-20020305_231600_20020306_040100-constBx0', 'mstate20020305_234600.hc', 1);
% error = plotQuickLook_iono( 'orbit278-02-20020416_044200_20020416_092600-constBx0', 'mstate20020416_051200.hc', 1);
   
    % Normal start
    error=0; 
    path(path,'/home/facsko/Projects/matlab/geopack');
    % E radius in m
    RE=6380000;
    root_path='/home/facsko/Projects/matlab/ECLAT/';  
    sim_path=['/home/facsko/stornext/',sliceDir,'/'];
%    sim_path=['/media/My\ Book/ECLAT/dynamic\ runs/',sliceDir,'/']; 
    % Logo
    imLogo=imread([root_path,'images/ECLAT_LOGO.png']);
    % Cluster position  
    year=str2double(mstateFilename(7:10));
    month=str2double(mstateFilename(11:12));
    day=str2double(mstateFilename(13:14));
    hour=str2double(mstateFilename(16:17));
    minute=str2double(mstateFilename(18:19));
    tStart=datenum(year,month,day,hour,minute,0);        
       
    % Open-close line boundary cap ---------------------------------------
    % Count lines/existence
    ocFilename=[sim_path,mstateFilename(1:21),'.oc'];
    [status,result]=unix(['wc -l ',ocFilename]);
    % Is there ocfile at all?
    isOCFile=0;
    if (isempty(strfind(result,'such'))),isOCFile=1;end;
    % Read the ocfile if it exists
    if (isOCFile)
        Noc=str2double(result(1:strfind(result,' ')));
        % Two hemisphera
        ocNorthArray=zeros(Noc,2);
        ocSouthArray=zeros(Noc,2);
        ocNorthArray=load(ocFilename);
        % Convert coordinate system - South
        [ocSouthArray(:,2),ocSouthArray(:,1)]=...
            pol2cart(pi/2-ocNorthArray(:,2),pi-ocNorthArray(:,1));
        % Convert coordinate system - North
        [ocNorthArray(:,2),ocNorthArray(:,1)]=...
            pol2cart(pi/2+ocNorthArray(:,2),ocNorthArray(:,1));            
    end;
    
    % MIRACLE boundaries by Kirsti ---------------------------------------
    % South-west corner [ 59.019° N; 3.161° E]
    % South-east corner [ 59.019° N; 42.361° E]
    % North-west corner [79.419° N; 3.161° E]
    % South-east corner [79.419° N; 42.361° E]
    % -----------------------------------------
     mLon=abs([-3.161,-42.361,-42.361,-3.161,-3.161])*pi/180;
     mLat=[59.019,59.019,79.419,79.419,59.019]*pi/180;
     % Test
%   mLon=[0,0,10]*pi/180;
%   mLat=[60,90,89]*pi/180;
%    % MLT2005
%    mLon=[92.32,127.39,145.361,125.59,92.32]*pi/180;
%    mLat=[60,53.56,72.48,77.32,60]*pi/180;
    GEOPACK_RECALC(year,fix(date2doy(tStart)),hour,minute,0);
    for im=1:numel(mLon)       
%         [xGEO,yGEO,zGEO] = GEOPACK_SPHCAR(RE,pi/2-mLat(im),mLon(im),1);
        [xGEO,yGEO,zGEO] = GEOPACK_SPHCAR(RE,pi/2-mLat(im),mLon(im),1);
%         [xMAG,yMAG,zMAG] = GEOPACK_GEOMAG (xGEO,yGEO,zGEO,1);
%         [xSM,ySM,zSM] = GEOPACK_MAGSM (xMAG,yMAG,zMAG,1);
        [xGSM,yGSM,zGSM] = GEOPACK_GEOGSM(xGEO,yGEO,zGEO,1);
        [xSM,ySM,zSM] = GEOPACK_SMGSM(xGSM,yGSM,zGSM,-1);
        [r,mLat(im),mLon(im)] = GEOPACK_SPHCAR(xSM,ySM,zSM,-1);
    end;   
    [mLon,mLat]=pol2cart(-mLon,mLat);      
        
    % GUMICS footprint coordinate conversion - North
    [fpNX,fpNY,fpNZ]=cart2sph(fp(2),fp(3),fp(4));  
    [fpNY,fpNX]=pol2cart(fpNX+pi/2,sin(pi/2-fpNY));
    % GUMICS footprint coordinate conversion - South
    [fpSX,fpSY,fpSZ]=cart2sph(fp(5),fp(6),fp(7));  
    [fpSY,fpSX]=pol2cart(fpSX+pi/2,sin(pi/2-fpSY));    
    % Tsyganenko Coordinate conversion - North
%    GEOPACK_RECALC(year,fix(date2doy(tStart)),hour,minute,0);
    fp(10:11)=fp(10:11)/180*pi;
    [xGEO,yGEO,zGEO] = GEOPACK_SPHCAR(fp(9),pi/2-fp(10),fp(11),1);
    [xGSM,yGSM,zGSM] = GEOPACK_GEOGSM(xGEO,yGEO,zGEO,1);
    [xSM,ySM,zSM] = GEOPACK_SMGSM(xGSM,yGSM,zGSM,-1);
    [fpNR,fpNLat,fpNLon] = GEOPACK_SPHCAR(xSM,ySM,zSM,-1);
    [fpNLon,fpNLat]=pol2cart(pi/2+fpNLon,fpNLat);        
     % Tsyganenko Coordinate conversion - South
%    GEOPACK_RECALC(year,fix(date2doy(tStart)),hour,minute,0);
    fp(13:14)=fp(13:14)/180*pi;
    [xGEO,yGEO,zGEO] = GEOPACK_SPHCAR(fp(12),pi/2-fp(13),fp(14),1);
    [xGSM,yGSM,zGSM] = GEOPACK_GEOGSM(xGEO,yGEO,zGEO,1);
    [xSM,ySM,zSM] = GEOPACK_SMGSM(xGSM,yGSM,zGSM,-1);
    [fpNR,fpSLat,fpSLon] = GEOPACK_SPHCAR(xSM,ySM,zSM,-1);
    [fpSLon,fpSLat]=pol2cart(pi/2+fpSLon,fpSLat);    
        
    % Ionospheric plots -------------------------------------------------- 
    % hem = 'hemisphere', N/S
    for hem=['n','s']
        % Dump Northerm or Southerm hemispheres
        if (dump)
            [status,result]=unix(['ionointpol -n -v phi,SigmaP,SigmaH,jPar,precip ',...
                sim_path,'i',mstateFilename(2:length(mstateFilename)-3),'.tri < ',...
                root_path,'pointfiles/',hem,'Pointfile-ECLAT-0.5.dat',' > ',...
                root_path,'data/',hem,'Dump-',mstateFilename(7:21),'.dat']);        
        end;       

        % Northerm or Southerm hemisphere Quicklook plot   
        % Array declaration
%        Nn=48307;
%        An=zeros(Nn,38);      
        % Read data  % lat lon phi SigmaP SigmaH jPar precip      
        dumpFilename=[root_path,'data/',hem,'Dump-',mstateFilename(7:21),...
            '.dat'];
        An=load(dumpFilename);
        % Coordinate conversion
        if (hem=='n')
            [An(:,2),An(:,1)]=pol2cart(pi/2+An(:,2)*pi/180,...
                sin((90-An(:,1))*pi/180));     
        end;
        if (hem=='s')
            [An(:,2),An(:,1)]=pol2cart(pi/2-An(:,2)*pi/180,...
                sin((90-An(:,1))*pi/180));     
        end;
        % Get matrix
        [C,X,Y]=getMatrix(An);
        % Delete colour edges. The reason of their apperance is that the 
        % white color is NOT the zero color, except for FAC
        for i=1:numel(An(:,1))
            if (sqrt(An(i,1)^2+An(i,2)^2)>pi/6-0.01)
                An(i,4)=5;
                An(i,5)=6;
                An(i,7)=3*10^(-4);
            end;
        end;           

        % Figure in the background   
        p = figure('visible','off'); 

        % Plot all subplots
        for ip=1:4
            % Plot pattern
            switch ip
                case 1
                    % SigmaP
                    subplot('Position',[0.1 0.5 0.4 0.4]);
                    scatter(An(:,2),An(:,1),5,An(:,4),'d','filled');
                case 2
                    % FAC
                    subplot('Position',[0.1 0.03 0.4 0.4]); 
                    scatter(An(:,2),An(:,1),5,An(:,6),'d','filled');
                case 3
                    % SigmaH
                    subplot('Position',[0.55 0.5 0.4 0.4]);
                    scatter(An(:,2),An(:,1),5,An(:,5),'d','filled');
                case 4
                    % Precipitation
                    subplot('Position',[0.55 0.03 0.4 0.4]);
                    scatter(An(:,2),An(:,1),5,An(:,7),'d','filled');
            end;       
            axis equal tight off;
            axis([-pi/6 pi/6 -pi/6 pi/6]);
            if (ip==1)   
                prefix='Northern';
                if (hem=='s'),prefix='Southern';end;                
                text(0.85,0.70,[prefix,' hemisphere ionosphere quick-look plots at ',...
                    mstateFilename(16:17),':',mstateFilename(18:19),' on ',...
                    datestr([str2num(mstateFilename(7:10))...
                    str2num(mstateFilename(11:12))...
                    str2num(mstateFilename(13:14)) 0 0 0],'dd mmm yyyy')],...
                    'HorizontalAlignment','Center');               
            end;
            % Colormap - only once for one file
            if (ip==1),colormap(getColormap(256,'seismic'));end;
            % Once per subplot
            cb=colorbar;    
            switch ip
                case 1
                    % SigmaP
                    caxis([0,10]);
                    set(get(cb,'YLabel'),'String','\Sigma_P [{\Omega}^{-1}]',...
                        'Rotation',270,'VerticalAlignment','Bottom');   
                case 2
                    % FAC
                    caxis([-4*10^-8, 4*10^-8]);          
                    set(get(cb,'YLabel'),'String','FAC [A m^{-2}]',...
                        'Rotation',270,'VerticalAlignment','Bottom');
                case 3
                    % SigmaH
                    caxis([0,12]);
                    set(get(cb,'YLabel'),'String',...
                        '\Sigma_H [{\Omega}^{-1}]','Rotation',270,...
                        'VerticalAlignment','Bottom'); 
                case 4
                    % Precipitation
                    caxis([0,6*10^-4]);
                    set(get(cb,'YLabel'),'String',...
                        'Precipitation [W m^{-2}]','Rotation',270,....
                        'VerticalAlignment','Bottom')
            end;              
            hold on;                   
            % Convert amount to equivalent grid
            if (ip==2),plotE(An,2.5,hem);end;         
            % Plot electric potential contours 
            contour(X,Y,C,'c');                       
            % Plot polar cap
            if (isOCFile)
                if (hem=='n'),plot(ocNorthArray(:,2),ocNorthArray(:,1),'.k');end;
                if (hem=='s'),plot(ocSouthArray(:,2),ocSouthArray(:,1),'.k');end;
            end;               
            % Plot GUMICS footprint on the Northern Hemisphere if there is
            if ((fp(1)==2 || fp(1)==3) && hem=='n'),plot(fpNX,fpNY,'xy');end;
            % Plot GUMICS footprint on the Southern Hemisphere if there is
            if ((fp(1)==1 || fp(1)==3) && hem=='s'),plot(fpSX,fpSY,'xy');end;
            % Plot Tsyganenko footprint on the Northern Hemisphere if there is
            if ((fp(8)==0 || fp(8)==2) && hem=='n'),plot(fpNLon,fpNLat,'xg');end;
            % Plot Tsyganenko footprint on the Northern Hemisphere if there is
            if ((fp(8)==0 || fp(8)==3) && hem=='s'),plot(fpSLon,fpSLat,'xg');end;
            % Coordinate network
            plotNetwork(hem); 
            % Plot MIRACLE equivalent current, only on the Northen Hemisphere      
            if (hem=='n'),plot(mLat,mLon,'-y','LineWidth',1);end;
            % Delete the wrong contours around the plot
            rectangle('Position',[-0.6,-0.6,1.2,1.2],...
                'FaceColor','none','EdgeColor',[0.99 0.99 0.99],'Curvature',[1,1],...
                'LineWidth',40);   
            % Delete the wrong contours in the center of the plot
             rectangle('Position',[-0.035,-0.035,0.07,0.07],...
                 'FaceColor',[0.99 0.99 0.99],'EdgeColor',[0.99 0.99 0.99],...
                 'Curvature',[1,1],'LineWidth',1); 
            % Logo in the left bottom corner
            if (ip==2),image([-8,-5]*pi/48,[-5.75,-8]*pi/48,imLogo);end;
            % End of plot
            hold off;
        end;

        % Save image
        prefix='north';
        if (hem=='s'),prefix='south';end;
        print(p,'-depsc2',[root_path,'images/',prefix,'QuickPlot-',...
            mstateFilename(7:21),'.eps']);
        % Closing the plot box
        close;              
     end;
end

