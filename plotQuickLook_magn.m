function [ error ] = plotQuickLook_magn( sliceDir, mstateFilename, dump )
%plotQuickLook Generate slides of simulation results
%   The ECLAT WP520 provides one year continous GUMICS simulation based on
%   real solar wind measurements based on OMNIWeb data. Three slides are
%   generated by this tool in png format to the CAA:
%   
%   i.;  x=[-30,20], y=[-25,25], z=0
%   ii;  x=[-30,20], y=0, z=[-25,25]
%   iii; x=10, y=z=[-25,25]
%   
%   All units are in E radius and the density, pressure and plasma beta 
%   are ploted.
%
%   Developed by Gabor Facsko (gabor.facsko@fmi.fi)
%   Finnish Meteorological Institute, 2012
%
% ------------------------------------------------------------------------
 
    error=0; 
    % E radius in m
    RE=6380000;
    root_path='/home/facsko/Projects/matlab/ECLAT/';  
    sim_path=['/home/facsko/stornext/',sliceDir,'/'];
    data_path='/home/facsko/QSAS/C3_CP_AUX_POSGSE_1M/';
    % Circle
    angle=2*pi*(0:15:360)/360;
    r=3.7;
    % Logo
    imLogo=imread([root_path,'images/ECLAT_LOGO.png']);
    % Cluster position  
    year=str2num(mstateFilename(7:10));
    month=str2num(mstateFilename(11:12));
    day=str2num(mstateFilename(13:14));
    hour=str2num(mstateFilename(16:17));
    minute=str2num(mstateFilename(18:19));
    tStart=datenum(year,month,day,hour,minute,0);        

    % Read orbit data ----------------------------------------------------    
    clPos=getClusterPosition([data_path,'C3_CP_AUX_POSGSE_1M__20020129_000000_20030203_000000_V091203.cdf'],tStart);    
    clPos=clPos/RE*1000;

    
    % Dump XY, XZ, YZ
    if (dump)
        [status,result]=unix(['hcintpol -n -v n,P,beta ',...
            sim_path,mstateFilename,' < ',...
            root_path,'pointfiles/xyPointfile-ECLAT-0.25RE.dat',' > ',...
            root_path,'data/xyDump-',mstateFilename(7:21),'.dat']);         
        [status,result]=unix(['hcintpol -n -v n,P,beta ',...
            sim_path,mstateFilename,' < ',...
            root_path,'pointfiles/xzPointfile-ECLAT-0.25RE.dat',' > ',...
            root_path,'data/xzDump-',mstateFilename(7:21),'.dat']);    
        [status,result]=unix(['hcintpol -n -v n,P,beta ',...
                sim_path,mstateFilename,' < ',...
                root_path,'pointfiles/yzPointfile-ECLAT-0.25RE.dat',' > ',...
                root_path,'data/yzDump-',mstateFilename(7:21),'.dat']);
    end;       

    % XY plot ------------------------------------------------------------
      
    % Load XY file
    Nxy=40401; 
    Axy=zeros(Nxy,6);  
    xyDumpFilename=[root_path,'data/xyDump-',mstateFilename(7:21),'.dat'];
    Axy=load(xyDumpFilename);
    % Do not execute for empty files
    if (numel(Axy)>0)
        Axy(:,1:3)=Axy(:,1:3)/RE;
        Axy(:,4)=log(Axy(:,4)/10^6);
        Axy(:,5)=log(Axy(:,5)*10^12);       
    end;
    
    % Load xz file
    Nxz=Nxy; 
    Axz=zeros(Nxz,6);     
    xzDumpFilename=[root_path,'data/xzDump-',mstateFilename(7:21),'.dat'];
    Axz=load(xzDumpFilename);
    % Do not execute for empty files
    if (numel(Axz)>0)        
        Axz(:,1:3)=Axz(:,1:3)/RE;
        Axz(:,4)=log(Axz(:,4)/10^6);
        Axz(:,5)=log(Axz(:,5)*10^12);
    end;
    
    % Load yz file
    Nyz=Nxy; 
    Ayz=zeros(Nyz,6);  
    yzDumpFilename=[root_path,'data/yzDump-',mstateFilename(7:21),'.dat'];
    Ayz=load(yzDumpFilename);
    % Do not execute for empty files
    if (numel(Ayz)>0)       
        Ayz(:,1:3)=Ayz(:,1:3)/RE;
        Ayz(:,4)=log(Ayz(:,4)/10^6);
        Ayz(:,5)=log(Ayz(:,5)*10^12);
    end;

    % Do not execute for empty files
    if (numel(Axy)*numel(Axz)*numel(Ayz)>0)
        % Create three Quickplot images
        for i=1:3
%['start: ',datestr(now)]
            % Figure in the background   
            p = figure('visible','off');     
            % Colormap   
            colormap(getColormap(256,'jet'));       
            % Plot XY -------------------------------------------------------
            subplot('Position',[0.1 0.57 0.4 0.4]);
            % Plot the appropriate quantity
            scatter(Axy(:,1),Axy(:,2),2,Axy(:,4+i-1),'s','filled');
            set(gca,'XTick',-30:10:20);    
            set(gca,'YTick',-30:10:30);
            axis equal tight;  
            ylabel('Y_{GSE} [R_{E}]');   
            axis([-30 20 -25 25]); 
            % Appropriate colourrange
            switch i
                case 1
                    caxis([-4, 4]);
                case 2
                    caxis([-2, 8]);
                case 3
                    caxis([0, 6]);
            end;       
            hold on;
            % Circle
            plot(r*sin(angle),r*cos(angle),'--k');   
            % Grid (the grid command is overplotted)
            plot([-20,-20],[-25,25],'--k');
            plot([-10,-10],[-25,25],'--k');
            plot([0,0],[-25,25],'--k');
            plot([10,10],[-25,25],'--k');
            plot([-30,20],[-20,-20],'--k');
            plot([-30,20],[-10,-10],'--k');
            plot([-30,20],[0,0],'--k');
            plot([-30,20],[10,10],'--k');  
            plot([-30,20],[20,20],'--k');  
            text(-28,22,'XY plane, Z=0 R_{E}');
            % Cluster position
            plot(clPos(1),clPos(2),'+k');
            text(double(clPos(1)+6*sign(clPos(1))),double(clPos(2)),...
                'Cluster','HorizontalAlignment','Center','VerticalAlignment','Middle');

            % XZ plot ---------------------------------------------------------
            subplot('Position',[0.1 0.1 0.4 0.4]);
            % Plot the appropriate quantity
            scatter(Axz(:,1),Axz(:,3),2,Axz(:,4+i-1),'s','filled');          
            set(gca,'XTick',-30:10:20);    
            set(gca,'YTick',-30:10:30);  
            axis equal tight;
            xlabel('X_{GSE} [R_{E}]');
            ylabel('Z_{GSE} [R_{E}]');        
            axis([-30 20 -25 25]); 
            % Appropriate colourrange        
            switch i
                case 1
                    caxis([-4, 4]);
                case 2
                    caxis([-2, 8]);
                case 3
                    caxis([0, 6]);
            end;
            colormap(getColormap(256,'jet'));
            hold on;
            % Circle
            plot(r*sin(angle),r*cos(angle),'--k');   
            % Grid (the grid command is overplotted)
            plot([-20,-20],[-25,25],'--k');
            plot([-10,-10],[-25,25],'--k');
            plot([0,0],[-25,25],'--k');
            plot([10,10],[-25,25],'--k');   
            plot([-30,20],[-20,-20],'--k');
            plot([-30,20],[-10,-10],'--k');
            plot([-30,20],[0,0],'--k');
            plot([-30,20],[10,10],'--k');  
            plot([-30,20],[20,20],'--k');  
            text(-28,22,'XZ plane, Y=0 R_E');
            % Cluster position
            plot(clPos(1),clPos(3),'+k');        
            text(double(clPos(1)+6*sign(clPos(1))),double(clPos(3)),...
                'Cluster','HorizontalAlignment','Center','VerticalAlignment','Middle');

            % YZ plot -------------------------------------------------------------

            % Plot YZ 
            subplot('Position',[0.55 0.1 0.4 0.4]);
            % Plot the appropriate quantity
            scatter(Ayz(:,2),Ayz(:,3),2,Ayz(:,4+i-1),'s','filled');          
            set(gca,'XTick',-30:10:30);    
            set(gca,'YTick',-30:10:30);  
            axis equal tight;
            xlabel('Y_{GSE} [R_{E}]');
            axis([-25 25 -25 25]); 
            % Appropriate colourrange        
            cb=colorbar;
            colormap(getColormap(256,'jet'));
            switch i
                case 1
                    caxis([-4, 4]);
                    set(get(cb,'YLabel'),'String','Log(density) [cm^{-3}]',...
                        'Rotation',270,'VerticalAlignment','Bottom');     
                case 2
                    caxis([-2, 8]);
                    set(get(cb,'YLabel'),'String','Log(pressure) [pPa]',...
                        'Rotation',270,'VerticalAlignment','Bottom');     
                case 3
                    caxis([0, 6]);
                    set(get(cb,'YLabel'),'String','\beta',...
                        'Rotation',270,'VerticalAlignment','Bottom');  
            end;        
            hold on;
            % Circle
        %    plot(r*sin(angle),r*cos(angle),'--k');   
            % Grid (the grid command is overplotted)
            plot([-20,-20],[-25,25],'--k');
            plot([-10,-10],[-25,25],'--k');
            plot([0,0],[-25,25],'--k');
            plot([10,10],[-25,25],'--k');
            plot([20,20],[-25,25],'--k');
            plot([-25,25],[-20,-20],'--k');
            plot([-25,25],[-10,-10],'--k');
            plot([-25,25],[0,0],'--k');
            plot([-25,25],[10,10],'--k');  
            plot([-25,25],[20,20],'--k');  
            text(-23,22,'YZ plane, X=-10 R_{E}');    
            % Cluster position
            plot(clPos(2),clPos(3),'+k');   
            text(double(clPos(2)+6*sign(clPos(2))),double(clPos(3)),...
                'Cluster','HorizontalAlignment','Center','VerticalAlignment','Middle');

            % Colorbar etc. -------------------------------------------------------
            subplot('Position',[0.6 0.55 0.2 0.2]); 
            switch i
                case 1
                    text(100,290,['Log(density) [cm^{-3}] at ',...
                        mstateFilename(16:17),':',mstateFilename(18:19),' on ',...
                        mstateFilename(7:14)],'HorizontalAlignment','Center');
                case 2
                    text(100,290,['Log(pressure) [pPa] at ',...
                        mstateFilename(16:17),':',mstateFilename(18:19),' on ',...
                        mstateFilename(7:14)],'HorizontalAlignment','Center');
                case 3
                    text(100,290,['Plasma \beta at ',mstateFilename(16:17),':',...
                        mstateFilename(18:19),' on ',mstateFilename(7:14)],...
                        'HorizontalAlignment','Center');     
            end;
            axis off;          
            hold on;
            % Logo
            image([1,200],[117,1],imLogo);   
            axis image;        

            % Save the file --------------------------------------------------     
            switch i
            case 1
                prefix='n';        
            case 2
                prefix='p';
            case 3
                prefix='beta';
            end; 
%['end of gen: ',datestr(now)]
%             print(p,'-dpng',[root_path,'images/',prefix,'QuickPlot-',...
%                 mstateFilename(7:21),'.png']);
%['png: ',datestr(now)]
%             print(p,'-djpeg',[root_path,'images/',prefix,'QuickPlot-',...
%                 mstateFilename(7:21),'.jpg']);         
%['jpeg: ',datestr(now)]
            print(p,'-depsc2',[root_path,'images/',prefix,'QuickPlot-',...
                mstateFilename(7:21),'.eps']); 
%['eps: ',datestr(now)]
%             print(p,'-dpdf',[root_path,'images/',prefix,'QuickPlot-',...
%                 mstateFilename(7:21),'.pdf']);   
%['pdf: ',datestr(now)]
            % Closing the plot box
            close;
        end;       
    end;
end

